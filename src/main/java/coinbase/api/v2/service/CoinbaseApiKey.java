package coinbase.api.v2.service;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;

import org.apache.commons.codec.digest.HmacUtils;

public final class CoinbaseApiKey {
    
    private CoinbaseApiKey() {}
    
    private String accessKey;
    private String accessSign;
    private String accessTimestamp;
    
    /**
     * The CB-ACCESS-SIGN header is generated by creating a sha256 HMAC using :
     * the secret key on the prehash string timestamp + method + requestPath + body (where + represents string concatenation). 
     * The timestamp value is the same as the CB-ACCESS-TIMESTAMP header.
     * @throws NoSuchAlgorithmException 
     * @throws InvalidKeyException 
     */
    public static CoinbaseApiKey build(String apiKey, String apiSecret, String timestamp, String method, String requestPath, String requestBody) throws InvalidKeyException, NoSuchAlgorithmException {
        CoinbaseApiKey coinbaseApiKey = new CoinbaseApiKey();
        coinbaseApiKey.accessKey = apiKey;
        coinbaseApiKey.accessTimestamp = timestamp;
        String sign = coinbaseApiKey.accessTimestamp + method.toUpperCase() + requestPath + ((requestBody==null) ? "" : requestBody);
        coinbaseApiKey.accessSign = encodeSign(apiSecret, sign);
        return coinbaseApiKey;
    }
    
    protected static String encodeSign(String secret, String sign) throws NoSuchAlgorithmException, InvalidKeyException {
        return HmacUtils.hmacSha256Hex(secret, sign);
    }

    public String getAccessKey() {
        return accessKey;
    }

    public String getAccessSign() {
        return accessSign;
    }

    public String getAccessTimestamp() {
        return accessTimestamp;
    }
    
}
